{"version":3,"mappings":"iPA8CEA,iBAAqD,WAGjDA,iBAAmC,SAEnCA,eAAgDA,sBAAUA,kCAFrDA,oDACFA,yDACeA,qDA9CxB,MAAMC,EAAoBC,KAAqB,qBAkDxC,IAAMC,EAAwB,MAA/B,QAGJC,YAAoBC,EAA0BC,GAA1BC,YAA0BA,cAE9CC,WACED,KAAKF,KAAKI,IAAoBR,GAC3BS,MACCC,OAAWC,IACTL,KAAKD,OAAOM,MAAM,IAAIC,MAAM,GAAGZ,qBAAqCW,EAAME,YACnE,QAETC,KAAIC,GAAiBT,KAAKU,wBAAwBD,KAClDL,OAAWC,IACTL,KAAKD,OAAOM,MAAM,IAAIC,MAAM,GAAGZ,4BAA4CW,EAAME,YAC1E,MAGVI,UAAUC,GAAgBZ,KAAKY,aAAeA,GAM3CF,wBAAwBD,GAC9B,OAAOA,EACJI,OAAOD,GAAgB,IAAIE,KAAKF,EAAaG,WAAWC,UAAYF,KAAKG,OACzEJ,OAAOD,GAAgB,IAAIE,KAAKF,EAAaM,SAASF,UAAYF,KAAKG,OACvE,iDA5BMrB,GAAwBuB,iDAAxBvB,EAAwBwB,iOATnC3B,4BAAiCA,kEAStBG,GAAwB,GC5CxByB,EAAqB,MAA5B,QAJNxB,cAKEG,4BAAoCJ,gDADzByB,4DAHF,CAAEC,KAAcC,IAAcC,SAG5BH,GAAqB","names":["i0","announcementsPath","CONTENT_URL_PREFIX","AnnouncementBarComponent","constructor","http","logger","this","ngOnInit","get","pipe","catchError","error","Error","message","map","announcements","findCurrentAnnouncement","subscribe","announcement","filter","Date","startDate","valueOf","now","endDate","n","selectors","AnnouncementBarModule","CommonModule","SharedModule","HttpClientModule"],"sources":["./src/app/custom-elements/announcement-bar/announcement-bar.component.ts","./src/app/custom-elements/announcement-bar/announcement-bar.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Logger } from 'app/shared/logger.service';\r\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\r\nconst announcementsPath = CONTENT_URL_PREFIX + 'announcements.json';\r\n\r\nexport interface Announcement {\r\n  imageUrl: string;\r\n  message: string;\r\n  linkUrl: string;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\n/**\r\n * Display the latest live announcement. This is used on the homepage.\r\n *\r\n * The data for the announcements is kept in `aio/content/marketing/announcements.json`.\r\n *\r\n * The format for that data file looks like:\r\n *\r\n * ```\r\n * [\r\n *   {\r\n *     \"startDate\": \"2018-02-01\",\r\n *     \"endDate\": \"2018-03-01\",\r\n *     \"message\": \"This is an <b>important</b> announcement\",\r\n *     \"imageUrl\": \"url/to/image\",\r\n *     \"linkUrl\": \"url/to/website\"\r\n *   },\r\n *   ...\r\n * ]\r\n * ```\r\n *\r\n * Only one announcement will be shown at any time. This is determined as the first \"live\"\r\n * announcement in the file, where \"live\" means that its start date is before today, and its\r\n * end date is after today.\r\n *\r\n * **Security Note:**\r\n * The `message` field can contain unsanitized HTML but this field should only updated by\r\n * verified members of the Angular team.\r\n */\r\n@Component({\r\n  selector: 'aio-announcement-bar',\r\n  template: `\r\n  <div class=\"homepage-container\" *ngIf=\"announcement\">\r\n    <div class=\"announcement-bar\">\r\n      <!-- eslint-disable-next-line @angular-eslint/template/accessibility-alt-text -->\r\n      <img [src]=\"announcement.imageUrl\">\r\n      <p [innerHTML]=\"announcement.message\"></p>\r\n      <a class=\"button\" [href]=\"announcement.linkUrl\">Learn More</a>\r\n    </div>\r\n  </div>`\r\n})\r\nexport class AnnouncementBarComponent implements OnInit {\r\n  announcement: Announcement;\r\n\r\n  constructor(private http: HttpClient, private logger: Logger) {}\r\n\r\n  ngOnInit() {\r\n    this.http.get<Announcement[]>(announcementsPath)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.logger.error(new Error(`${announcementsPath} request failed: ${error.message}`));\r\n          return [];\r\n        }),\r\n        map(announcements => this.findCurrentAnnouncement(announcements)),\r\n        catchError(error => {\r\n          this.logger.error(new Error(`${announcementsPath} contains invalid data: ${error.message}`));\r\n          return [];\r\n        }),\r\n      )\r\n      .subscribe(announcement => this.announcement = announcement);\r\n  }\r\n\r\n  /**\r\n   * Get the first date in the list that is \"live\" now\r\n   */\r\n  private findCurrentAnnouncement(announcements: Announcement[]) {\r\n    return announcements\r\n      .filter(announcement => new Date(announcement.startDate).valueOf() < Date.now())\r\n      .filter(announcement => new Date(announcement.endDate).valueOf() > Date.now())\r\n      [0];\r\n  }\r\n}\r\n","import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { AnnouncementBarComponent } from './announcement-bar.component';\r\nimport { WithCustomElementComponent } from '../element-registry';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, SharedModule, HttpClientModule ],\r\n  declarations: [ AnnouncementBarComponent ]\r\n})\r\nexport class AnnouncementBarModule implements WithCustomElementComponent {\r\n  customElementComponent: Type<any> = AnnouncementBarComponent;\r\n}\r\n"],"sourceRoot":"webpack:///","file":"42.ce64a033d60efa28.js"}