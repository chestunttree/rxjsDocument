{"version":3,"mappings":"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","names":["contributorsPath","CONTENT_URL_PREFIX","knownGroups","ContributorService","constructor","http","this","contributors","getContributors","get","pipe","map","contribs","contribMap","Object","keys","forEach","key","contributor","group","contribGroup","push","cmap","order","indexOf","name","length","sort","compareContributors","compareGroups","publishLast","connect","t","factory","l","r","toUpperCase","i0","$event","ctx_r8","ContributorComponent","flipCard","person","isFlipped","selectors","ctx_r3","ContributorListComponent","contributorService","locationService","ngOnInit","groupName","search","subscribe","grps","groups","groupNames","g","selectGroup","toLowerCase","selectedGroup","find","setSearch","ContributorListModule","imports","CommonModule"],"sources":["./src/app/custom-elements/contributor/contributor.service.ts","./src/app/custom-elements/contributor/contributor.component.ts","./src/app/custom-elements/contributor/contributor-list.component.ts","./src/app/custom-elements/contributor/contributor-list.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConnectableObservable, Observable } from 'rxjs';\r\nimport { map, publishLast } from 'rxjs/operators';\r\n\r\nimport { Contributor, ContributorGroup } from './contributors.model';\r\n\r\n// TODO(andrewjs): Look into changing this so that we don't import the service just to get the const\r\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\r\n\r\nconst contributorsPath = CONTENT_URL_PREFIX + 'contributors.json';\r\nconst knownGroups = ['Core Team', 'Learning Team', 'Alumn', 'Contributors'];\r\n\r\n@Injectable()\r\nexport class ContributorService {\r\n  contributors: Observable<ContributorGroup[]>;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.contributors = this.getContributors();\r\n  }\r\n\r\n  private getContributors() {\r\n    const contributors = this.http.get<{[key: string]: Contributor}>(contributorsPath).pipe(\r\n      // Create group map\r\n      map(contribs => {\r\n        const contribMap: { [name: string]: Contributor[]} = {};\r\n        Object.keys(contribs).forEach(key => {\r\n          const contributor = contribs[key];\r\n          const group = contributor.group;\r\n          const contribGroup = contribMap[group];\r\n          if (contribGroup) {\r\n            contribGroup.push(contributor);\r\n          } else {\r\n            contribMap[group] = [contributor];\r\n          }\r\n        });\r\n\r\n        return contribMap;\r\n      }),\r\n\r\n      // Flatten group map into sorted group array of sorted contributors\r\n      map(cmap => Object.keys(cmap).map(key => {\r\n          const order = knownGroups.indexOf(key);\r\n          return {\r\n            name: key,\r\n            order: order === -1 ? knownGroups.length : order,\r\n            contributors: cmap[key].sort(compareContributors)\r\n          } as ContributorGroup;\r\n        })\r\n        .sort(compareGroups)),\r\n\r\n      publishLast(),\r\n    );\r\n\r\n    (contributors as ConnectableObservable<ContributorGroup[]>).connect();\r\n    return contributors;\r\n  }\r\n}\r\n\r\nfunction compareContributors(l: Contributor, r: Contributor) {\r\n return l.name.toUpperCase() > r.name.toUpperCase() ? 1 : -1;\r\n}\r\n\r\nfunction compareGroups(l: ContributorGroup, r: ContributorGroup) {\r\n  return l.order === r.order ?\r\n    (l.name > r.name ? 1 : -1) :\r\n     l.order > r.order ? 1 : -1;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Contributor } from './contributors.model';\r\nimport { CONTENT_URL_PREFIX } from 'app/documents/document.service';\r\n\r\n@Component({\r\n  selector: 'aio-contributor',\r\n  template: `\r\n    <div [ngClass]=\"{ 'flipped': person.isFlipped }\" class=\"contributor-card\">\r\n\r\n        <div class=\"card-front\">\r\n            <h3>{{person.name}}</h3>\r\n\r\n            <div class=\"contributor-image\" [style.background-image]=\"'url('+(person.picture || noPicture)+')'\">\r\n                <div class=\"contributor-info\">\r\n                    <a *ngIf=\"person.bio\" mat-button>\r\n                        View Bio\r\n                    </a>\r\n                    <a *ngIf=\"person.twitter\" mat-button class=\"icon\"\r\n                        href=\"{{person.twitter}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\r\n                        <span class=\"fa fa-twitter fa-2x\" aria-hidden=\"true\"></span>\r\n                        <span class=\"sr-only\">Twitter {{person.name}}</span>\r\n                    </a>\r\n                    <a *ngIf=\"person.github\" mat-button class=\"icon\"\r\n                        href=\"{{person.github}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\r\n                        <span class=\"fa fa-github fa-2x\" aria-hidden=\"true\"></span>\r\n                        <span class=\"sr-only\">GitHub {{person.name}}</span>\r\n                    </a>\r\n                    <a *ngIf=\"person.website\" mat-button class=\"icon\"\r\n                        href=\"{{person.website}}\" target=\"_blank\" (click)=\"$event.stopPropagation()\">\r\n                        <span class=\"fa fa-link fa-2x\" aria-hidden=\"true\"></span>\r\n                        <span class=\"sr-only\">Personal website {{person.name}}</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- eslint-disable-next-line @angular-eslint/template/click-events-have-key-events -->\r\n        <div class=\"card-back\" *ngIf=\"person.isFlipped\" (click)=\"flipCard(person)\">\r\n            <h3>{{person.name}}</h3>\r\n            <p class=\"contributor-bio\">{{person.bio}}</p>\r\n        </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class ContributorComponent {\r\n  @Input() person: Contributor;\r\n  noPicture = '_no-one.png';\r\n  pictureBase = CONTENT_URL_PREFIX + 'images/bios/';\r\n\r\n  flipCard(person: Contributor) {\r\n    person.isFlipped = !person.isFlipped;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ContributorGroup } from './contributors.model';\r\nimport { ContributorService } from './contributor.service';\r\nimport { LocationService } from 'app/shared/location.service';\r\n\r\n@Component({\r\n  selector: 'aio-contributor-list',\r\n  template: `\r\n  <div class=\"flex-center group-buttons\">\r\n  <!-- eslint-disable-next-line @angular-eslint/template/click-events-have-key-events -->\r\n    <a *ngFor=\"let name of groupNames\"\r\n       [class.selected]=\"name == selectedGroup.name\"\r\n       class=\"button mat-button filter-button\"\r\n       (click)=\"selectGroup(name)\">{{name}}</a>\r\n  </div>\r\n  <section *ngIf=\"selectedGroup\" class=\"grid-fluid\">\r\n    <div class=\"contributor-group\">\r\n      <aio-contributor *ngFor=\"let person of selectedGroup.contributors\" [person]=\"person\"></aio-contributor>\r\n    </div>\r\n  </section>`\r\n})\r\nexport class ContributorListComponent implements OnInit {\r\n  private groups: ContributorGroup[];\r\n  groupNames: string[];\r\n  selectedGroup: ContributorGroup;\r\n\r\n  constructor(\r\n    private contributorService: ContributorService,\r\n    private locationService: LocationService) { }\r\n\r\n  ngOnInit() {\r\n    const groupName =  this.locationService.search().group || '';\r\n    // no need to unsubscribe because `contributors` completes\r\n    this.contributorService.contributors\r\n      .subscribe(grps => {\r\n        this.groups = grps;\r\n        this.groupNames = grps.map(g => g.name);\r\n        this.selectGroup(groupName);\r\n      });\r\n  }\r\n\r\n  selectGroup(name: string) {\r\n    name = name.toLowerCase();\r\n    this.selectedGroup = this.groups.find(g => g.name.toLowerCase() === name) || this.groups[0];\r\n    this.locationService.setSearch('', {group: this.selectedGroup.name});\r\n  }\r\n}\r\n","import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContributorListComponent } from './contributor-list.component';\r\nimport { ContributorService } from './contributor.service';\r\nimport { ContributorComponent } from './contributor.component';\r\nimport { WithCustomElementComponent } from '../element-registry';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ContributorListComponent, ContributorComponent],\r\n  providers: [ContributorService],\r\n})\r\nexport class ContributorListModule implements WithCustomElementComponent {\r\n  customElementComponent: Type<any> = ContributorListComponent;\r\n}\r\n"],"sourceRoot":"webpack:///","file":"283.76cc682a624c636b.js"}